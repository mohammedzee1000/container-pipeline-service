---

- name: Ensure log path exists
  file: path=/srv/pipeline-logs/cccp.log state=touch

- name: Stop Mail Service
  shell: docker rm -f mail-server
  register: result
  until: result['rc'] == 0 or result['stderr'].find('No such container') >= 0
  retries: 10
  delay: 10
  ignore_errors: true

- name: Print result
  debug: msg="Result= {{ result }}"

- name: Set log level
  replace: >
      dest="{{ ansible_env.HOME }}/cccp-service/mail_service/config.py"
      regexp="LOG_LEVEL =.*"
      replace="LOG_LEVEL = '{{ log_level }}'"

- name: Build mail server image
  shell: docker build -t mail-server -f ./Dockerfile.mailserv .
  args:
      chdir: "{{ ansible_env.HOME }}/cccp-service/mail_service"

- name: Start Mail Service
  when: production
  docker_container:
      name: mail-server
      state: started
      image: mail-server
      restart_policy: unless-stopped
      volumes:
        /srv/pipeline-logs:/srv/pipeline-logs:rw
      env:
        PRODUCTION: True

- name: Start Mail Service
  when: not production
  docker_container:
    name: mail-server
    state: started
    image: mail-server
    restart_policy: unless-stopped
    volumes:
      /srv/pipeline-logs/:/srv/pipeline-logs:rw
    env:
      PRODUCTION: False
